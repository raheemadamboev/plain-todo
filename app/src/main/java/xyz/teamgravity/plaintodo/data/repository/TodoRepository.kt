package xyz.teamgravity.plaintodo.data.repository

import kotlinx.coroutines.flow.Flow
import xyz.teamgravity.plaintodo.data.local.TodoDao
import xyz.teamgravity.plaintodo.data.model.TodoModel

class TodoRepository(
    private val dao: TodoDao
) {

    ///////////////////////////////////////////////////////////////////////////
    // Insert
    ///////////////////////////////////////////////////////////////////////////

    suspend fun insertTodoSync(todo: TodoModel) {
        dao.insertTodo(todo)
    }

    ///////////////////////////////////////////////////////////////////////////
    // Update
    ///////////////////////////////////////////////////////////////////////////

    suspend fun updateTodoSync(todo: TodoModel) {
        dao.updateTodo(todo)
    }

    ///////////////////////////////////////////////////////////////////////////
    // Delete
    ///////////////////////////////////////////////////////////////////////////

    suspend fun deleteTodoSync(todo: TodoModel) {
        dao.deleteTodo(todo)
    }

    ///////////////////////////////////////////////////////////////////////////
    // Get
    ///////////////////////////////////////////////////////////////////////////

    suspend fun getTodo(id: Int): TodoModel? {
        return dao.getTodo(id)
    }

    fun getAllTodo(): Flow<List<TodoModel>> {
        return dao.getAllTodo()
    }
}